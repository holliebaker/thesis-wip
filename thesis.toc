\contentsline {chapter}{\numberline {1}Introduction}{9}{chapter.1}%
\contentsline {section}{\numberline {1.1}Structure of the thesis}{16}{section.1.1}%
\contentsline {chapter}{\numberline {2}Background}{21}{chapter.2}%
\contentsline {section}{\numberline {2.1}Semialgebraic sets and monotone cells}{21}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Sets definable over O-minimal structures}{21}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Monotone cells}{26}{subsection.2.1.2}%
\contentsline {section}{\numberline {2.2}Cylindrical algebraic decomposition}{28}{section.2.2}%
\contentsline {subsection}{\numberline {2.2.1}Constructing a CAD}{31}{subsection.2.2.1}%
\contentsline {subsection}{\numberline {2.2.2}Bounds and variations}{36}{subsection.2.2.2}%
\contentsline {subsection}{\numberline {2.2.3}The projection operator}{37}{subsection.2.2.3}%
\contentsline {subsection}{\numberline {2.2.4}Projection polynomials vs semialgebraic functions}{38}{subsection.2.2.4}%
\contentsline {subsection}{\numberline {2.2.5}CAD cells and their defining formulas}{39}{subsection.2.2.5}%
\contentsline {chapter}{\numberline {3}Smooth Stratification}{41}{chapter.3}%
\contentsline {section}{\numberline {3.1}Description of the algorithm}{42}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}Subroutines and algorithm details}{46}{subsection.3.1.1}%
\contentsline {section}{\numberline {3.2}Worked example}{48}{section.3.2}%
\contentsline {section}{\numberline {3.3}Optimisation of the output}{50}{section.3.3}%
\contentsline {subsection}{\numberline {3.3.1}Determining the codimension and basic formula for each stratum}{50}{subsection.3.3.1}%
\contentsline {subsection}{\numberline {3.3.2}Discarding redundant equations}{52}{subsection.3.3.2}%
\contentsline {subsection}{\numberline {3.3.3}From basic algebraic sets to arbitrary semialgebraic sets}{53}{subsection.3.3.3}%
\contentsline {subsection}{\numberline {3.3.4}Implementation in C}{54}{subsection.3.3.4}%
\contentsline {section}{\numberline {3.4}Complexity analysis}{65}{section.3.4}%
\contentsline {section}{\numberline {3.5}Test cases}{67}{section.3.5}%
\contentsline {chapter}{\numberline {4}Quasi-Affine Cells}{71}{chapter.4}%
\contentsline {section}{\numberline {4.1}Computing the smooth two-dimensional locus of the input set}{72}{section.4.1}%
\contentsline {subsection}{\numberline {4.1.1}An alternative approach}{72}{subsection.4.1.1}%
\contentsline {section}{\numberline {4.2}Ensuring that every cell is the graph of a quasi-affine map}{73}{section.4.2}%
\contentsline {subsection}{\numberline {4.2.1}Computing the quasi-affine CAD}{74}{subsection.4.2.1}%
\contentsline {section}{\numberline {4.3}Correctness and complexity}{76}{section.4.3}%
\contentsline {subsection}{\numberline {4.3.1}Complexity analysis}{76}{subsection.4.3.1}%
\contentsline {chapter}{\numberline {5}Monotone Cells}{79}{chapter.5}%
\contentsline {section}{\numberline {5.1}Two-dimensional monotone sector cells}{82}{section.5.1}%
\contentsline {subsection}{\numberline {5.1.1}Finding the critical points of functions phi and psi}{84}{subsection.5.1.1}%
\contentsline {subsection}{\numberline {5.1.2}Working in the sub-decomposition above a 0-cell}{88}{subsection.5.1.2}%
\contentsline {section}{\numberline {5.2}Two-dimensional monotone section cells}{90}{section.5.2}%
\contentsline {subsection}{\numberline {5.2.1}Case 1: \(2 \le j \le \alpha - 1\)}{90}{subsection.5.2.1}%
\contentsline {subsection}{\numberline {5.2.2}Case 2: \(\alpha + 1 \le j \le n\)}{91}{subsection.5.2.2}%
\contentsline {subsection}{\numberline {5.2.3}Critical points of the top and bottom of C}{92}{subsection.5.2.3}%
\contentsline {section}{\numberline {5.3}Implementation details}{94}{section.5.3}%
\contentsline {subsection}{\numberline {5.3.1}Algorithm}{94}{subsection.5.3.1}%
\contentsline {section}{\numberline {5.4}Correctness and complexity}{96}{section.5.4}%
\contentsline {subsection}{\numberline {5.4.1}Complexity analysis}{97}{subsection.5.4.1}%
\contentsline {section}{\numberline {5.5}Computing the refinements}{98}{section.5.5}%
\contentsline {chapter}{\numberline {6}Frontier Condition}{101}{chapter.6}%
\contentsline {section}{\numberline {6.1}Construction of a CAD with frontier condition due to Basu, Gabrielov and Vorobjov}{102}{section.6.1}%
\contentsline {section}{\numberline {6.2}Lazard's method for dimension not greater than 3}{104}{section.6.2}%
\contentsline {subsection}{\numberline {6.2.1}Lazard's algorithm for lifting with bad points in \(\mathbb {R}^3\)}{110}{subsection.6.2.1}%
\contentsline {section}{\numberline {6.3}Generalisation of Lazard's method}{112}{section.6.3}%
\contentsline {subsection}{\numberline {6.3.1}Algorithm for lifting above bad points, for CAD compatible with sets of dimension \(\le 2\)}{118}{subsection.6.3.1}%
\contentsline {subsection}{\numberline {6.3.2}Correctness and complexity}{120}{subsection.6.3.2}%
\contentsline {subsubsection}{\numberline {6.3.2.1}Complexity analysis}{121}{subsubsection.6.3.2.1}%
\contentsline {chapter}{\numberline {7}Implementation And Testing}{123}{chapter.7}%
\contentsline {section}{\numberline {7.1}Implementation on top of QEPCAD}{123}{section.7.1}%
\contentsline {subsection}{\numberline {7.1.1}Description of QEPCAD B}{124}{subsection.7.1.1}%
\contentsline {subsection}{\numberline {7.1.2}QEPCAD cells and sample points}{126}{subsection.7.1.2}%
\contentsline {subsection}{\numberline {7.1.3}Modifications to QEPCAD}{131}{subsection.7.1.3}%
\contentsline {subsection}{\numberline {7.1.4}Quasi-affine}{132}{subsection.7.1.4}%
\contentsline {subsection}{\numberline {7.1.5}Monotone}{135}{subsection.7.1.5}%
\contentsline {subsection}{\numberline {7.1.6}Frontier condition}{141}{subsection.7.1.6}%
\contentsline {subsection}{\numberline {7.1.7}Refinement}{145}{subsection.7.1.7}%
\contentsline {subsection}{\numberline {7.1.8}Obtaining defining formulas for every cell}{152}{subsection.7.1.8}%
\contentsline {subsection}{\numberline {7.1.9}The overall algorithm}{154}{subsection.7.1.9}%
\contentsline {subsection}{\numberline {7.1.10}Additional modifications and utility functions}{158}{subsection.7.1.10}%
\contentsline {subsubsection}{\numberline {7.1.10.1}Modifications}{158}{subsubsection.7.1.10.1}%
\contentsline {subsubsection}{\numberline {7.1.10.2}New files}{159}{subsubsection.7.1.10.2}%
\contentsline {section}{\numberline {7.2}Test cases}{160}{section.7.2}%
\contentsline {chapter}{\numberline {8}A Novel algorithm For Obtaining The Frontier Condition On A Cylindrical Decomposition Of \(n\)-Dimensional Space}{209}{chapter.8}%
\contentsline {section}{\numberline {8.1}Statement of the problem}{210}{section.8.1}%
\contentsline {section}{\numberline {8.2}Theory}{211}{section.8.2}%
\contentsline {subsection}{\numberline {8.2.1}Computing the frontier of a semialgebraic set}{211}{subsection.8.2.1}%
\contentsline {subsection}{\numberline {8.2.2}Intermediate results}{212}{subsection.8.2.2}%
\contentsline {section}{\numberline {8.3}Main result}{214}{section.8.3}%
\contentsline {subsection}{\numberline {8.3.1}Algorithm psuedo-code}{214}{subsection.8.3.1}%
\contentsline {subsection}{\numberline {8.3.2}Worked example}{216}{subsection.8.3.2}%
\contentsline {subsection}{\numberline {8.3.3}Mathematical description}{220}{subsection.8.3.3}%
\contentsline {subsection}{\numberline {8.3.4}Proof of correctness}{221}{subsection.8.3.4}%
\contentsline {subsection}{\numberline {8.3.5}Complexity}{222}{subsection.8.3.5}%
\contentsline {subsection}{\numberline {8.3.6}A note on constructing the intermediate decompositions}{222}{subsection.8.3.6}%
\contentsline {section}{\numberline {8.4}Generalisations and further work}{223}{section.8.4}%
\contentsline {subsection}{\numberline {8.4.1}Pfaffian functions}{223}{subsection.8.4.1}%
\contentsline {subsection}{\numberline {8.4.2}Further wrok}{224}{subsection.8.4.2}%
\contentsline {chapter}{\numberline {9}Conclusions and Further Work}{225}{chapter.9}%
\contentsline {section}{\numberline {9.1}Conclusions}{225}{section.9.1}%
\contentsline {subsection}{\numberline {9.1.1}Smooth stratification of a semialgebraic set}{225}{subsection.9.1.1}%
\contentsline {subsection}{\numberline {9.1.2}An algorithm to construct monotone CAD compatible with a family of semialgebraic sets of dimension at most 2}{226}{subsection.9.1.2}%
\contentsline {subsection}{\numberline {9.1.3}A novel algorithm for computing a CAD with frontier condition, compatible with a semialgebraic set of arbitrary dimension}{228}{subsection.9.1.3}%
\contentsline {section}{\numberline {9.2}Further work}{228}{section.9.2}%
\contentsline {chapter}{Appendix A: Test Cases}{231}{chapter*.7}%
